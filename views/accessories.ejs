<!-- views/accessories.ejs -->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Accessories | SmartExchange</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" 
        integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/js/all.min.js" crossorigin="anonymous"></script>
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="/styles/accessories.css">
</head>
<body>
  <%- include('partials/header.ejs') %>
  <!-- Carousel Section -->
  <div class="d-flex justify-content-center mt-4">
    <div id="carouselExampleAutoplaying" class="carousel slide carousel-container" data-bs-ride="carousel" data-bs-interval="2000">
      <div class="carousel-inner">
        <div class="carousel-item active">
          <img src="/images/carousal/accessories/acc-1.webp" class="d-block w-100">
        </div>
        <div class="carousel-item">
          <img src="/images/carousal/accessories/acc-2.jpeg" class="d-block w-100">
        </div>
        <div class="carousel-item">
          <img src="/images/carousal/accessories/acc-4.webp" class="d-block w-100">
        </div>
        <div class="carousel-item">
          <img src="/images/carousal/accessories/acc-3.jpeg" class="d-block w-100">
        </div>
      </div>
      <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleAutoplaying" data-bs-slide="prev">
        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Previous</span>
      </button>
      <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleAutoplaying" data-bs-slide="next">
        <span class="carousel-control-next-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Next</span>
      </button>
    </div>
  </div>

  <div class="container">
    <div class="categories">
      <div class="category">
        <a href="/chargers"><img class="category-image" src="/images/accessories/icons/charger.jpg"><br>Chargers</a>
      </div>
      <div class="category">
        <a href="/earbuds"><img class="category-image" src="/images/accessories/icons/Ear buds.png"><br>Earbuds</a>
      </div>
      <div class="category">
        <a href="/mouses"><img class="category-image" src="/images/accessories/icons/mouse.jpg"><br>Mouses</a>
      </div>
      <div class="category">
        <a href="/smartwatches"><img class="category-image" src="/images/accessories/icons/Smart watch.jpg"><br>SmartWatches</a>
      </div>
    </div>

    <h2 class="best_in_value_heading">Newly Added Accessories</h2>

    <div class="bg-best">
      <div class="container">
        <div class="grid" id="latest-accessories-container">
          <!-- Populated by JS -->
        </div>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" 
          integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
  <script>
    async function fetchAndRenderLatestAccessories() {
      try {
        const response = await fetch('/api/latest-accessories');
        if (!response.ok) throw new Error('Failed to fetch latest accessories');
        const accessories = await response.json();
        console.log('Fetched accessories:', accessories);

        const grid = document.getElementById('latest-accessories-container');
        grid.innerHTML = ''; // Clear existing content

        if (accessories.length === 0) {
          grid.innerHTML = '<p>No new accessories available.</p>';
          return;
        }

        accessories.forEach(accessory => {
          const finalPrice = calculateFinalPrice(accessory);
          const originalPrice = accessory.base_price;
          const card = document.createElement('div');
          card.className = 'card';
          card.innerHTML = `
            <a href="/${accessory.type}/${accessory.id}" style="text-decoration: none; color: #000;">
              <img src="${accessory.image}" alt="${accessory.brand} ${accessory.title}">
              <p class="best_in_value_phone_name">${accessory.brand} ${accessory.title}</p>
              <p class="price">₹${finalPrice.toLocaleString('en-IN')} <span class="old-price">₹${originalPrice.toLocaleString('en-IN')}</span></p>
              <p class="discount">${accessory.discount}% off</p>
              ${getAccessorySpecs(accessory)}
            </a>
          `;
          grid.appendChild(card);
        });
      } catch (error) {
        console.error('Error fetching latest accessories:', error);
        const grid = document.getElementById('latest-accessories-container');
        grid.innerHTML = '<p>Error loading accessories. Please try again later.</p>';
      }
    }

    function calculateFinalPrice(product) {
      const price = parseFloat(product.base_price || 0);
      const discount = parseFloat(product.discount || 0);
      const finalPrice = Number((price - (price * discount / 100)).toFixed(2));
      return finalPrice;
    }

    function getAccessorySpecs(accessory) {
      let specs = '';
      if (accessory.type === 'charger' && accessory.specs.wattage) {
        specs += `<p><span class="accessories-homepage-div-bold">Wattage:</span> ${accessory.specs.wattage}</p>`;
      }
      if (accessory.type === 'earphone' && accessory.specs.battery_life) {
        specs += `<p><span class="accessories-homepage-div-bold">Battery Life:</span> ${accessory.specs.battery_life}</p>`;
      }
      if (accessory.type === 'mouse' && accessory.specs.connectivity) {
        specs += `<p><span class="accessories-homepage-div-bold">Connectivity:</span> ${accessory.specs.connectivity}</p>`;
      }
      if (accessory.type === 'smartwatch') {
        if (accessory.specs.display_size) {
          specs += `<p><span class="accessories-homepage-div-bold">Display Size:</span> ${accessory.specs.display_size}</p>`;
        }
        if (accessory.specs.battery_life) {
          specs += `<p><span class="accessories-homepage-div-bold">Battery Life:</span> ${accessory.specs.battery_life}</p>`;
        }
      }
      return specs;
    }

    fetchAndRenderLatestAccessories();
    setInterval(fetchAndRenderLatestAccessories, 30000);
  </script>
</body>
<footer><%- include('partials/footer') %></footer>
</html>