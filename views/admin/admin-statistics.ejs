<!-- views/admin/admin-statistics.ejs -->
<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Smart Exchange Admin Dashboard - Statistics</title>
        <link rel="stylesheet" href="/styles/admin/home.css"> 
        <link rel="stylesheet" href="/styles/admin-statistics.css"> 
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    </head>
<body>
    <div class="container">
        <!-- Sidebar (unchanged) -->
        <div class="sidebar">
            <div class="logo">
                <a href="/admin/home"><img src="/images/header/logo1.png" alt="Logo"></a>  
            </div>
            <div class="nav-items">
                <div class="nav-item">
                    <i class="fa-solid fa-house"></i>
                    <a href="/admin/home" style="text-decoration: none; color: white;">Dashboard</a>
                </div>
                <div class="nav-item">
                    <i class="fa-solid fa-box"></i>
                    <a href="/admin/manage-supervisors" style="text-decoration: none; color: white;">Manage Supervisors</a>
                </div>
                <div class="nav-item active">
                    <i class="fa-solid fa-chart-simple"></i>
                    <span>Analytics</span>
                </div>
                <div class="nav-item">
                    <i class="fa-solid fa-gear"></i>
                    <a id="logout-button" style="text-decoration: none; color: white;">Logout</a>
                </div>
            </div>
        </div>
        
        <!-- Main Content -->
        <div class="main-content">
            <div class="header">
                <div class="user-actions">
                    <div class="avatar"></div>
                </div>
            </div>
            
            <!-- Statistics Section -->
            <div id="stats-grid">
                <div class="stats-card">
                    <div class="card-title">TOTAL SALES</div>
                    <div class="card-value" id="total-sales">Loading...</div>
                    <div class="card-indicator positive">
                        <i class="fa-solid fa-arrow-up"></i>
                        <span id="sales-trend">Calculating...</span>
                    </div>
                </div>
                
                <div class="stats-card">
                    <div class="card-title">TOTAL LISTINGS</div>
                    <div class="card-value" id="total-listings">Loading...</div>
                    <div class="card-indicator positive">
                        <i class="fa-solid fa-arrow-up"></i>
                        <span id="listings-trend">Calculating...</span>
                    </div>
                </div>
                
                <div class="stats-card">
                    <div class="card-title">APPROVED LISTINGS</div>
                    <div class="card-value" id="approved-listings">Loading...</div>
                    <div class="card-indicator positive">
                        <i class="fa-solid fa-arrow-up"></i>
                        <span id="approved-trend">Calculating...</span>
                    </div>
                </div>
                
                <div class="stats-card">
                    <div class="card-title">SALES REVENUE</div>
                    <div class="card-value" id="sales-revenue">₹ Loading...</div>
                    <div class="card-indicator positive">
                        <i class="fa-solid fa-arrow-up"></i>
                        <span id="revenue-trend">Calculating...</span>
                    </div>
                </div>
                
                <div class="stats-card">
                    <div class="card-title">INVENTORY REVENUE POTENTIAL</div>
                    <div class="card-value" id="inventory-revenue">₹ Loading...</div>
                    <div class="card-indicator positive">
                        <i class="fa-solid fa-arrow-up"></i>
                        <span id="inventory-trend">Calculating...</span>
                    </div>
                </div>
            </div>

            <!-- Bar Chart Section -->
            <div class="chart-section">
                <div class="section-title">Statistics Overview</div>
                <canvas id="statsChart"></canvas>
            </div>

            <div class="refresh-section">
                <button class="btn btn-primary" id="refresh-btn">Refresh Statistics</button>
                <p>Last updated: <span id="last-updated">Never</span></p>
            </div>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.7.1/chart.min.js"></script>
    <script>
        let statsChart;

        function fetchStatistics() {
            fetch('/api/admin/statistics', { 
                credentials: 'include',
                headers: { 'Content-Type': 'application/json' }
            })
            .then(response => {
                if (!response.ok) throw new Error(`Server error: ${response.status}`);
                return response.json();
            })
            .then(data => {
                if (data.success) {
                    const stats = data.statistics;

                    // Update card values
                    document.getElementById('total-sales').textContent = stats.totalSales;
                    document.getElementById('total-listings').textContent = stats.totalListings;
                    document.getElementById('approved-listings').textContent = stats.approvedListings;
                    document.getElementById('sales-revenue').textContent = `₹ ${stats.totalSalesRevenue.toFixed(2)}`;
                    document.getElementById('inventory-revenue').textContent = `₹ ${stats.totalInventoryRevenuePotential.toFixed(2)}`;
                    
                    document.getElementById('sales-trend').textContent = 'Trend not available';
                    document.getElementById('listings-trend').textContent = 'Trend not available';
                    document.getElementById('approved-trend').textContent = 'Trend not available';
                    document.getElementById('revenue-trend').textContent = 'Trend not available';
                    document.getElementById('inventory-trend').textContent = 'Trend not available';
                    
                    document.getElementById('last-updated').textContent = new Date().toLocaleString();

                    // Update or create bar chart
                    const ctx = document.getElementById('statsChart').getContext('2d');
                    const chartData = [
                        stats.totalSales,
                        stats.totalListings,
                        stats.approvedListings,
                        stats.totalSalesRevenue,
                        stats.totalInventoryRevenuePotential
                    ];
                    const chartLabels = [
                        'Total Sales',
                        'Total Listings',
                        'Approved Listings',
                        'Sales Revenue (₹)',
                        'Inventory Potential (₹)'
                    ];

                    if (statsChart) {
                        statsChart.destroy(); // Destroy old chart to prevent overlap
                    }

                    statsChart = new Chart(ctx, {
                        type: 'bar',
                        data: {
                            labels: chartLabels,
                            datasets: [{
                                label: 'Statistics',
                                data: chartData,
                                backgroundColor: [
                                    'rgba(37, 99, 235, 0.6)',  // Blue
                                    'rgba(16, 185, 129, 0.6)', // Green
                                    'rgba(245, 158, 11, 0.6)', // Orange
                                    'rgba(139, 92, 246, 0.6)', // Purple
                                    'rgba(236, 72, 153, 0.6)'  // Pink
                                ],
                                borderColor: [
                                    'rgba(37, 99, 235, 1)',
                                    'rgba(16, 185, 129, 1)',
                                    'rgba(245, 158, 11, 1)',
                                    'rgba(139, 92, 246, 1)',
                                    'rgba(236, 72, 153, 1)'
                                ],
                                borderWidth: 1
                            }]
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: true, // Enforce aspect ratio
                            animation: false, // Disable animations
                            scales: {
                                y: {
                                    beginAtZero: true,
                                    title: {
                                        display: true,
                                        text: 'Value'
                                    },
                                    ticks: {
                                        callback: function(value) {
                                            return value >= 1000 ? `₹${(value / 1000).toFixed(1)}k` : value;
                                        }
                                    }
                                },
                                x: {
                                    title: {
                                        display: true,
                                        text: 'Metrics'
                                    }
                                }
                            },
                            plugins: {
                                legend: {
                                    display: false // Single dataset, no need for legend
                                },
                                tooltip: {
                                    callbacks: {
                                        label: function(context) {
                                            let value = context.parsed.y;
                                            if (context.dataIndex >= 3) {
                                                return `₹${value.toLocaleString('en-IN', { maximumFractionDigits: 2 })}`;
                                            }
                                            return value.toString();
                                        }
                                    }
                                }
                            }
                        }
                    });
                } else {
                    throw new Error(data.message || 'Unknown server error');
                }
            })
            .catch(error => {
                console.error('Error fetching statistics:', error);
                document.querySelectorAll('.card-value').forEach(el => el.textContent = 'Error');
                document.getElementById('last-updated').textContent = 'Failed to update';
                alert(`Failed to load statistics: ${error.message}`);
            });
        }

        // Initial fetch
        fetchStatistics();

        // Refresh button
        document.getElementById('refresh-btn').addEventListener('click', fetchStatistics);

        // Logout (unchanged)
        document.getElementById('logout-button').addEventListener('click', async (e) => {
            e.preventDefault();
            try {
                const response = await fetch('/api/admin/logout', { 
                    method: 'GET',
                    headers: { 'Content-Type': 'application/json' },
                    credentials: 'include'
                });
                const data = await response.json();
                if (data.success) {
                    localStorage.removeItem("currentSession");
                    if (!localStorage.getItem("rememberUser")) {
                        localStorage.removeItem("rememberUser");
                    }
                    window.location.href = '/admin/login';
                } else {
                    console.error('Logout failed:', data.message);
                    alert('Failed to log out. Please try again.');
                }
            } catch (error) {
                console.error('Error during logout:', error);
                alert('Error during logout. Please try again.');
            }
        });
    </script>
</body>
</html>